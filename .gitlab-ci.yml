image: python:3.12

stages:
  - lint
  - deploy
  - coverage

py_compile:
  stage: lint
  script:
    - find . -name "*.py" -not -path "./venv/*" -exec python -m py_compile {} +

black:
  stage: lint
  before_script:
    - pip install black
  script:
    - black --check .

isort:
  stage: lint
  before_script:
    - pip install isort
  script:
    - isort --check-only .

antl4r:
  stage: lint
  image: danistomi/antlr4
  script:
    - antlr4 -o antlr_check -no-listener -no-visitor language/Language.g4
    - rm -r antlr_check/

pymarkdownlnt:
  stage: lint
  before_script:
    - pip install pymarkdownlnt
  script:
    - pymarkdown --disable-rules md013 scan docs/

pages:
  stage: deploy
  before_script:
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements-mkdocs-build.txt
    - pip install -r requirements.txt
    - mkdocs --version
    - pwd
  script:
    - mkdocs build
    - pytest --cov=. --cov-report html:site
    - pytest --html=site/report.html
  only:
    - main
  artifacts:
    paths:
      - site
  publish: site
  cache:
    paths:
      - .cache/pip
      - venv

codecov:
  stage: coverage
  before_script:
    - pip install pytest-html pytest-cov
  script:
    - coverage run -m pytest
    - coverage report
    - coverage xml
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
